/* My Answer */
class Solution {
    fun solution(s: String): IntArray {
        /* [풀이과정] : regex없이 String내장함수를 이용함 */
        val elemList = convertToIntList(s).sortedBy{ list -> list.size }
        val size = elemList.size
        val answer = IntArray(size)
        answer[0] = elemList[0][0]
        for(i in 1 until size) {
            val small = elemList[i-1]
            val large = elemList[i]
            for(j in 0 until large.size){
                if(!small.contains(large[j])) {
                    answer[i] = large[j]
                }
            }
        }
        return answer
    }

    fun convertToIntList(s: String): MutableList<List<Int>> {
        val tuples = s.subSequence(1, s.length-1)
        val intListOfList = mutableListOf<List<Int>>()
        val sb = StringBuilder("")
        var intList = mutableListOf<Int>()
        try{
            for(c in tuples){
                when(c){
                    '}' -> {
                        intList.add(sb.toString().toInt())
                        intListOfList.add(intList)
                        sb.clear()
                        intList = mutableListOf<Int>()
                    }

                    ',' -> {
                        if(!sb.isNullOrBlank()) intList.add(sb.toString().toInt())
                        sb.clear()
                    }

                    else -> {
                        if(c != '{') sb.append(c)
                    }
                }
            }
            return intListOfList
        } catch(e: NumberFormatException){
            throw e   
        }
    }
}

/* 모범답안 */
class Solution {
    fun solution(s: String): IntArray {
        return s.substring(2 until s.length-2)
            .split("},{")
            .asSequence()
            .map { it.split(",").map { num -> num.toInt() } }
            .toList()
            .sortedBy { it.size }
            .fold(setOf<Int>()) { acc, list -> acc.union(list) }
            .toIntArray()
    }
}

/* 레벨테스트 때 풀이한 내용 */
/* Comparable 없이 그냥 sortedBy 함수를 이용하면됐었다. */
/* fold, union의 사용법에 대해 무지했음 (추가공부 필요) */
class Solution {
    fun solution(s: String): IntArray {

        val temp = s.substring(2, s.count()-2).split("},{").sortedWith(comparator).map{
            v -> v.split(",")
        }
        val size = temp.count()
        var answer = IntArray(size)
        var prevSubset: List<Char>
        for(i in temp.indices){
            if(i == 0){
                answer[i] = temp[0][0].toInt()
            } else {
                val nextSub = temp[i]
                val sub = temp[i-1]
                for(j in nextSub.indices){
                    if(!sub.contains(nextSub[j])){
                        answer[i] = nextSub[j].toString().toInt()
                        break
                    }
                }
            }

        }

        return answer
    }

    val comparator =  Comparator<String> { a, b ->
            when {
                (a.count() == b.count()) -> 0
                (a.count() < b.count()) -> -1
                else -> 1
            }
        }
}
