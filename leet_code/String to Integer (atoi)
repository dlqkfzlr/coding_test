fun myAtoi(s: String): Int {
    val size = s.count()
    val charArray = s.toCharArray()
    var idx = 0
    var startIdx = 0
    var step1 = false
    var step2 = false
    var isPositive = true
    var isleadingZero = true
    var step3 = false
    while(idx < size){
        val currentChar = charArray[idx]
        // Step 1
        if(!step1){
            if(currentChar == ' '){
                idx++
            } else{
                step1 = true
                continue
            }
        }

        // Step 2
        if(step1 && !step2){
            if(currentChar == '-') {
                idx++
                isPositive = false
            }
            else if(currentChar == '+'){
                idx++
            }
            step2 = true
            startIdx = idx
            continue
        }

        // Step 3
        if(step2 && !step3){
            if (currentChar == '0' && isleadingZero){
                idx++
                startIdx = idx
                continue
            }
            if(currentChar in '0'..'9'){
                isleadingZero = false
                idx++
            } else {
                break
            }
        }
    }
    val temp = s.substring(startIdx, idx)
    if(temp.isBlank()) return 0

    // 범위 예외체크
    if(idx - startIdx > 10) {
        return if(isPositive) 2147483647 else -2147483648
    }
    val tempLong = temp.toLong()
    if (tempLong >= 2147483647L && isPositive){
        return 2147483647
    } else if (tempLong >= 2147483648L && !isPositive){
        return -2147483648
    }

    return temp.toInt() * if (!isPositive) -1 else 1
}
