// [단점] => 컬렉션 함수 사용으로 실행시간이 너무 길다
// [개선방안] => 반복문 & 인덱스로 접근 + 비교도중 불일치 발생시 바로 종료(불필요한 반복문 종료)

class Solution {
    fun isPalindrome(s: String): Boolean {
        val s0 = s.toList().filter{ v -> v in '0'..'9' || v in 'a'..'z' || v in 'A'..'Z' }
        if(s0.isEmpty() || s.isBlank()) return true
        val s1 = s0.map { v -> v.toString() }.reduce{ total, single -> total + single }
        return s1.equals(s1.reversed(), ignoreCase = true)
    }
}

// 모범답안
class Solution {
    fun isPalindrome(s: String): Boolean {
        if(s.isEmpty()) return true
        
        var i = 0
        var j = s.length -1
        
        while(i < j){
            while(i < j && !s[i].isLetterOrDigit()) i++
            while(i < j && !s[j].isLetterOrDigit()) j--
            
            if(s[i++].toLowerCase() != s[j--].toLowerCase()) return false
        }
        
        return true
    }
}
